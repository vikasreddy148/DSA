import java.util.Stack;

class MyQueue {
    private Stack<Integer> st1;
    private Stack<Integer> st2;
    private int peek;

    public MyQueue() {
        st1 = new Stack<>();
        st2 = new Stack<>();
    }

    public void push(int x) {
        if (st1.isEmpty()) {
            peek = x;
        }
        st1.push(x);
    }

    public int pop() {
        while (st1.size() > 1) {
            st2.push(st1.pop());
        }
        int val = st1.pop();

        if (!st2.isEmpty()) {
            peek = st2.peek();
        }

        while (!st2.isEmpty()) {
            st1.push(st2.pop());
        }
        return val;
    }

    public int peek() {
        return peek;
    }

    public boolean empty() {
        return st1.isEmpty();
    }

    public static void main(String[] args) {
        MyQueue obj = new MyQueue();
        obj.push(1);
        obj.push(2);
        obj.push(3);
        System.out.println(obj.peek()); // Output: 1
        System.out.println(obj.pop());  // Output: 1
        System.out.println(obj.peek()); // Output: 2
        System.out.println(obj.empty()); // Output: false
    }
}
